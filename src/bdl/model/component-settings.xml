<components>
	<component>
		<type>Button</type>
		<enabled>true</enabled>
		<package>javafx.scene.control</package>
		<layouttype>ControlLayout</layouttype>
		<icon>Button.png</icon>
		<properties>
			<property>
				<import></import>
				<name>Layout</name>
				<enabled>true</enabled>
				<pseudotype>Layout</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Text</name>
				<import></import>
				<enabled>true</enabled>
				<pseudotype>String</pseudotype>
				<default>Button</default>
				<setter>setText</setter>
				<getter>getText</getter>
				<fxml>text</fxml>
			</property>
			<property>
				<name>Disabled</name>
				<enabled>true</enabled>
				<pseudotype>Disabled</pseudotype>
				<default>false</default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Tooltip</name>
				<enabled>true</enabled>
				<pseudotype>Tooltip</pseudotype>
				<default></default>
				<setter>setTooltip</setter>
				<getter>getTooltip</getter>
				<fxml></fxml>
			</property>
		</properties>
		<listeners>
			<listener>
				<package>javafx.event</package>
				<isActive>true</isActive>
				<name>onAction</name>
				<method>setOnAction</method>
				<event>ActionEvent</event>
			</listener>
		</listeners>
	</component>
	<component>
		<type>TextArea</type>
		<enabled>true</enabled>
		<package>javafx.scene.control</package>
		<layouttype>ControlLayout</layouttype>
		<icon>TextArea.png</icon>
		<properties>
			<property>
				<name>Layout</name>
				<enabled>true</enabled>
				<pseudotype>Layout</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Text</name>
				<enabled>true</enabled>
				<pseudotype>String</pseudotype>
				<default>Text Area Text!</default>
				<setter>setText</setter>
				<getter>getText</getter>
				<fxml>text</fxml>
			</property>
			<property>
				<name>prefWidth</name>
				<enabled>true</enabled>
				<pseudotype>Double1DP</pseudotype>
				<default>0</default>
				<setter>setPrefWidth</setter>
				<getter>getPrefWidth</getter>
				<fxml>prefWidth</fxml>
			</property>
			<property>
				<name>prefHeight</name>
				<enabled>true</enabled>
				<pseudotype>Double1DP</pseudotype>
				<default>0</default>
				<setter>setPrefHeight</setter>
				<getter>getPrefHeight</getter>
				<fxml>prefHeight</fxml>
			</property>
		</properties>
		<listeners>
			<listener>
				<package>javafx.scene.input</package>
				<isActive>true</isActive>
				<name>keyTyped</name>
				<method>setOnKeyTyped</method>
				<event>KeyEvent</event>
			</listener>
		</listeners>
	</component>
	<component>
		<type>ScrollPane</type>
		<enabled>true</enabled>
		<package>javafx.scene.control</package>
		<layouttype>ControlLayout</layouttype>
		<icon>ScrollPane.png</icon>
		<properties>
			<property>
				<name>Layout</name>
				<enabled>true</enabled>
				<pseudotype>Layout</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>prefWidth</name>
				<enabled>true</enabled>
				<pseudotype>DoubleObserved</pseudotype>
				<observedProperty>prefWidthProperty</observedProperty>
				<default>0</default>
				<setter>setPrefWidth</setter>
				<getter>getPrefWidth</getter>
				<fxml>prefWidth</fxml>
			</property>
			<property>
				<name>prefHeight</name>
				<enabled>true</enabled>
				<pseudotype>DoubleObserved</pseudotype>
				<observedProperty>prefHeightProperty</observedProperty>
				<default>0</default>
				<setter>setPrefHeight</setter>
				<getter>getPrefHeight</getter>
				<fxml>prefHeight</fxml>
			</property>
			<property>
				<name>minWidth</name>
				<enabled>true</enabled>
				<pseudotype>DoubleObserved</pseudotype>
				<observedProperty>minWidthProperty</observedProperty>
				<default>0</default>
				<setter>setMinWidth</setter>
				<getter>getMinWidth</getter>
				<fxml>minWidth</fxml>
			</property>
			<property>
				<name>minHeight</name>
				<enabled>true</enabled>
				<pseudotype>DoubleObserved</pseudotype>
				<observedProperty>minHeightProperty</observedProperty>
				<default>0</default>
				<setter>setMinHeight</setter>
				<getter>getMinHeight</getter>
				<fxml>minHeight</fxml>
			</property>
		</properties>
		<listeners>
		</listeners>
	</component>
	<component>
		<type>TextField</type>
		<enabled>true</enabled>
		<package>javafx.scene.control</package>
		<layouttype>ControlLayout</layouttype>
		<icon>TextField.png</icon>
		<properties>
			<property>
				<name>Layout</name>
				<enabled>true</enabled>
				<pseudotype>Layout</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Text</name>
				<enabled>true</enabled>
				<pseudotype>String</pseudotype>
				<default>Text Field Text!</default>
				<setter>setText</setter>
				<getter>getText</getter>
				<fxml>text</fxml>
			</property>
		</properties>
		<listeners>
			<listener>
				<package>javafx.scene.input</package>
				<isActive>true</isActive>
				<name>keyTyped</name>
				<method>setOnKeyTyped</method>
				<event>KeyEvent</event>
			</listener>
		</listeners>
	</component>
	<component>
		<type>MenuBar</type>
		<enabled>false</enabled>
		<package>javafx.scene.control</package>
		<layouttype>MenuLayout</layouttype>
		<icon>MenuBar.png</icon>
		<properties>
		</properties>
		<listeners>
		</listeners>
	</component>
	<component>
		<type>Menu</type>
		<enabled>false</enabled>
		<package>javafx.scene.control</package>
		<layouttype>Todo</layouttype>
		<icon>Menu.png</icon>
		<properties>
		</properties>
		<listeners>
		</listeners>
	</component>
	<component>
		<type>SplitPane</type>
		<enabled>false</enabled>
		<package>javafx.scene.layout</package>
		<layouttype>Todo</layouttype>
		<icon>SplitPane.png</icon>
		<properties>
		</properties>
		<listeners>
		</listeners>
	</component>
	<component>
		<type>ListView</type>
		<enabled>false</enabled>
		<package>javafx.scene.layout</package>
		<layouttype>Todo</layouttype>
		<icon>ListView.png</icon>
		<properties>
		</properties>
		<listeners>
		</listeners>
	</component>
	<component>
		<type>ToolBar</type>
		<enabled>false</enabled>
		<package>javafx.scene.layout</package>
		<layouttype>Todo</layouttype>
		<icon>ToolBar.png</icon>
		<properties>

		</properties>
		<listeners>
		</listeners>
	</component>
	<component>
		<type>ComboBox</type>
		<enabled>true</enabled>
		<package>javafx.scene.control</package>
		<layouttype>ControlLayout</layouttype>
		<icon>ComboBox.png</icon>
		<properties>
			<property>
				<name>Layout</name>
				<enabled>true</enabled>
				<pseudotype>Layout</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Disabled</name>
				<enabled>true</enabled>
				<pseudotype>Disabled</pseudotype>
				<default>false</default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Tooltip</name>
				<enabled>true</enabled>
				<pseudotype>Tooltip</pseudotype>
				<default></default>
				<setter>setTooltip</setter>
				<getter>getTooltip</getter>
				<fxml></fxml>
			</property>
		</properties>
		<listeners>
			<listener>
				<package>javafx.event</package>
				<isActive>true</isActive>
				<name>onAction</name>
				<method>setOnAction</method>
				<event>ActionEvent</event>
			</listener>
		</listeners>
	</component>
	<component>
		<type>CheckBox</type>
		<enabled>true</enabled>
		<package>javafx.scene.control</package>
		<layouttype>ControlLayout</layouttype>
		<icon>CheckBox.png</icon>
		<properties>
			<property>
				<name>Layout</name>
				<enabled>true</enabled>
				<pseudotype>Layout</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Text</name>
				<enabled>true</enabled>
				<pseudotype>String</pseudotype>
				<default>Checkbox</default>
				<setter>setText</setter>
				<getter>getText</getter>
				<fxml>text</fxml>
			</property>
			<property>
				<name>Disabled</name>
				<enabled>true</enabled>
				<pseudotype>Disabled</pseudotype>
				<default>false</default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Tooltip</name>
				<enabled>true</enabled>
				<pseudotype>Tooltip</pseudotype>
				<default></default>
				<setter>setTooltip</setter>
				<getter>getTooltip</getter>
				<fxml></fxml>
			</property>
		</properties>
		<listeners>
			<listener>
				<package>javafx.event</package>
				<isActive>true</isActive>
				<name>onAction</name>
				<method>setOnAction</method>
				<event>ActionEvent</event>
			</listener>
		</listeners>
	</component>
	<component>
		<type>Label</type>
		<enabled>true</enabled>
		<package>javafx.scene.control</package>
		<layouttype>ControlLayout</layouttype>
		<icon>Label.png</icon>
		<properties>
			<property>
				<name>Layout</name>
				<enabled>true</enabled>
				<pseudotype>Layout</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Text</name>
				<enabled>true</enabled>
				<pseudotype>String</pseudotype>
				<default>Label text!</default>
				<setter>setText</setter>
				<getter>getText</getter>
				<fxml>text</fxml>
			</property>
			<property>
				<name>Disabled</name>
				<enabled>true</enabled>
				<pseudotype>Disabled</pseudotype>
				<default>false</default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Tooltip</name>
				<enabled>true</enabled>
				<pseudotype>Tooltip</pseudotype>
				<default></default>
				<setter>setTooltip</setter>
				<getter>getTooltip</getter>
				<fxml></fxml>
			</property>
		</properties>
		<listeners>
		</listeners>
	</component>
	<component>
		<type>Slider</type>
		<enabled>true</enabled>
		<package>javafx.scene.control</package>
		<layouttype>ControlLayout</layouttype>
		<icon>Slider-h.png</icon>
		<properties>
			<property>
				<name>Layout</name>
				<enabled>true</enabled>
				<pseudotype>Layout</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>min</name>
				<enabled>true</enabled>
				<pseudotype>Double1DP</pseudotype>
				<default>0</default>
				<setter>setMin</setter>
				<getter>getMin</getter>
				<fxml>min</fxml>
			</property>
			<property>
				<name>max</name>
				<enabled>true</enabled>
				<pseudotype>Double1DP</pseudotype>
				<default>100</default>
				<setter>setMax</setter>
				<getter>getMax</getter>
				<fxml>max</fxml>
			</property>
			<property>
				<name>value</name>
				<enabled>true</enabled>
				<pseudotype>Double1DP</pseudotype>
				<default>10</default>
				<setter>setValue</setter>
				<getter>getValue</getter>
				<fxml>value</fxml>
			</property>
            <property>
				<name>minTicksVisible</name>
				<enabled>true</enabled>
				<pseudotype>StandardBoolean</pseudotype>
				<default>false</default>
				<setter>setShowTickMarks</setter>
				<getter>isShowTickMarks</getter>
				<fxml>showTickMarks</fxml>
			</property>
			<property>
				<name>prefWidth</name>
				<enabled>true</enabled>
				<pseudotype>Double1DP</pseudotype>
				<default>0</default>
				<setter>setPrefWidth</setter>
				<getter>getPrefWidth</getter>
				<fxml>prefWidth</fxml>
			</property>
			<property>
				<name>prefHeight</name>
				<enabled>true</enabled>
				<pseudotype>Double1DP</pseudotype>
				<default>0</default>
				<setter>setPrefHeight</setter>
				<getter>getPrefHeight</getter>
				<fxml>prefHeight</fxml>
			</property>
			<property>
				<name>Disabled</name>
				<enabled>true</enabled>
				<pseudotype>Disabled</pseudotype>
				<default>false</default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Tooltip</name>
				<enabled>true</enabled>
				<pseudotype>Tooltip</pseudotype>
				<default></default>
				<setter>setTooltip</setter>
				<getter>getTooltip</getter>
				<fxml></fxml>
			</property>
		</properties>
		<listeners>
			<listener>
				<listenertype>observableNumber</listenertype>
				<package>javafx.beans.value</package>
				<isActive>true</isActive>
				<name>valueChanged</name>
				<method>valueProperty().addListener</method>
				<event>valueChanged</event>
			</listener>
		</listeners>
	</component>
	<component>
		<type>ImageView</type>
		<enabled>false</enabled>
		<package>javafx.scene.image</package>
		<layouttype>ControlLayout</layouttype>
		<icon>ImageView.png</icon>
		<properties>

		</properties>
		<listeners>
		</listeners>
	</component>
	<component>
		<type>AnchorPane</type>
		<enabled>true</enabled>
		<package>javafx.scene.layout</package>
		<layouttype>anchorpane</layouttype>
		<icon>AnchorPane.png</icon>
		<properties>
			<property>
				<name>Layout</name>
				<enabled>true</enabled>
				<pseudotype>Layout</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>MinWidth</name>
				<enabled>true</enabled>
				<pseudotype>MinWidth</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>MinHeight</name>
				<enabled>true</enabled>
				<pseudotype>MinHeight</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
		</properties>
		<listeners>
		</listeners>
	</component>
	<component>
		<type>Circle</type>
		<enabled>true</enabled>
		<package>javafx.scene.shape</package>
		<layouttype>ShapeLayout</layouttype>
		<icon>Circle.png</icon>
		<properties>
			<property>
				<name>Layout</name>
				<enabled>true</enabled>
				<pseudotype>Layout</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Fill</name>
				<enabled>true</enabled>
				<pseudotype>Color</pseudotype>
				<default>#FF0000</default>
				<setter>setFill</setter>
				<getter>getFill</getter>
				<fxml>fill</fxml>
			</property>
			<property>
				<name>Stroke</name>
				<enabled>true</enabled>
				<pseudotype>Stroke</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Radius</name>
				<enabled>true</enabled>
				<pseudotype>Double1DP</pseudotype>
				<default>10</default>
				<setter>setRadius</setter>
				<getter>getRadius</getter>
				<fxml>radius</fxml>
			</property>
		</properties>
		<listeners>
		</listeners>
	</component>
	<component>
		<type>Rectangle</type>
		<enabled>true</enabled>
		<package>javafx.scene.shape</package>
		<layouttype>ShapeLayout</layouttype>
		<icon>Rectangle.png</icon>
		<properties>
			<property>
				<name>Layout</name>
				<enabled>true</enabled>
				<pseudotype>Layout</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Fill</name>
				<enabled>true</enabled>
				<pseudotype>Color</pseudotype>
				<default>#FF0000</default>
				<setter>setFill</setter>
				<getter>getFill</getter>
				<fxml>fill</fxml>
			</property>
			<property>
				<name>Stroke</name>
				<enabled>true</enabled>
				<pseudotype>Stroke</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Width</name>
				<enabled>true</enabled>
				<pseudotype>DoubleObserved</pseudotype>
				<observedProperty>widthProperty</observedProperty>
				<default>100</default>
				<setter>setWidth</setter>
				<getter>getWidth</getter>
				<fxml>width</fxml>
			</property>
			<property>
				<name>Height</name>
				<enabled>true</enabled>
				<pseudotype>DoubleObserved</pseudotype>
				<observedProperty>heightProperty</observedProperty>
				<default>100</default>
				<setter>setHeight</setter>
				<getter>getHeight</getter>
				<fxml>height</fxml>
			</property>			
		</properties>
		<listeners>
		</listeners>
	</component>
	<component>
		<type>PasswordField</type>
		<enabled>true</enabled>
		<package>javafx.scene.control</package>
		<layouttype>ControlLayout</layouttype>
		<icon>PasswordField.png</icon>
		<properties>
			<property>
				<name>Layout</name>
				<enabled>true</enabled>
				<pseudotype>Layout</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Text</name>
				<enabled>true</enabled>
				<pseudotype>String</pseudotype>
				<default>Password</default>
				<setter>setText</setter>
				<getter>getText</getter>
				<fxml>text</fxml>
			</property>
		</properties>
		<listeners>
			<listener>
				<package>javafx.scene.input</package>
				<isActive>true</isActive>
				<name>keyTyped</name>
				<method>setOnKeyTyped</method>
				<event>KeyEvent</event>
			</listener>
		</listeners>
	</component>
	<component>
		<type>ColorPicker</type>
		<enabled>true</enabled>
		<package>javafx.scene.control</package>
		<layouttype>ControlLayout</layouttype>
		<icon>ColorPicker.png</icon>
		<properties>
			<property>
				<name>Layout</name>
				<enabled>true</enabled>
				<pseudotype>Layout</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Disabled</name>
				<enabled>true</enabled>
				<pseudotype>Disabled</pseudotype>
				<default>false</default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Tooltip</name>
				<enabled>true</enabled>
				<pseudotype>Tooltip</pseudotype>
				<default></default>
				<setter>setTooltip</setter>
				<getter>getTooltip</getter>
				<fxml></fxml>
			</property>
		</properties>
		<listeners>
			<listener>
				<package>javafx.event.*</package>
				<isActive>true</isActive>
				<name>onAction</name>
				<method>setOnAction</method>
				<event>ActionEvent</event>
			</listener>
		</listeners>
	</component>
	<component>
		<type>RadioButton</type>
		<enabled>true</enabled>
		<package>javafx.scene.control</package>
		<layouttype>ControlLayout</layouttype>
		<icon>RadioButton.png</icon>
		<properties>
			<property>
				<name>Layout</name>
				<enabled>true</enabled>
				<pseudotype>Layout</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Text</name>
				<enabled>true</enabled>
				<pseudotype>String</pseudotype>
				<default>RadioButton</default>
				<setter>setText</setter>
				<getter>getText</getter>
				<fxml>text</fxml>
			</property>
			<property>
				<name>Disabled</name>
				<enabled>true</enabled>
				<pseudotype>Disabled</pseudotype>
				<default>false</default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Tooltip</name>
				<enabled>true</enabled>
				<pseudotype>Tooltip</pseudotype>
				<default></default>
				<setter>setTooltip</setter>
				<getter>getTooltip</getter>
				<fxml></fxml>
			</property>
		</properties>
		<listeners>
			<listener>
				<package>javafx.event.*</package>
				<isActive>true</isActive>
				<name>onAction</name>
				<method>setOnAction</method>
				<event>ActionEvent</event>
			</listener>
		</listeners>
	</component>
	<component>
		<type>Hyperlink</type>
		<enabled>true</enabled>
		<package>javafx.scene.control</package>
		<layouttype>ControlLayout</layouttype>
		<icon>Hyperlink.png</icon>
		<properties>
			<property>
				<name>Layout</name>
				<enabled>true</enabled>
				<pseudotype>Layout</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Text</name>
				<enabled>true</enabled>
				<pseudotype>String</pseudotype>
				<default>Hyperlink</default>
				<setter>setText</setter>
				<getter>getText</getter>
				<fxml>text</fxml>
			</property>
			<property>
				<name>Disabled</name>
				<enabled>true</enabled>
				<pseudotype>Disabled</pseudotype>
				<default>false</default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>Tooltip</name>
				<enabled>true</enabled>
				<pseudotype>Tooltip</pseudotype>
				<default></default>
				<setter>setTooltip</setter>
				<getter>getTooltip</getter>
				<fxml></fxml>
			</property>
		</properties>
		<listeners>
			<listener>
				<package>javafx.event.*</package>
				<isActive>true</isActive>
				<name>onAction</name>
				<method>setOnAction</method>
				<event>ActionEvent</event>
			</listener>
		</listeners>
	</component>
	<component>
		<type>Canvas</type>
		<enabled>true</enabled>
		<package>javafx.scene.canvas</package>
		<layouttype>ControlLayout</layouttype>
		<icon>Canvas.png</icon>
		<properties>
			<property>
				<name>Layout</name>
				<enabled>true</enabled>
				<pseudotype>Layout</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
			<property>
				<name>CanvasSize</name>
				<enabled>true</enabled>
				<pseudotype>CanvasSize</pseudotype>
				<default></default>
				<setter></setter>
				<getter></getter>
				<fxml></fxml>
			</property>
		</properties>
		<listeners>
			<listener>
				<package>javafx.scene.input</package>
				<isActive>false</isActive>
				<name>onMouseDragged</name>
				<method>setonMouseDragged</method>
				<event>MouseEvent</event>
			</listener>
		</listeners>
	</component>
</components>

